Maven Project has 6 tables in the database representing information for orders placed online from March 2012 to May 2015. 
  order_item_refunds
  order_items
  orders
  products
  website_pageviews
  website_sessions

#1. I want to see list of the pageview_URLS and rank them by most session volume.  
SELECT  
    pageview_url,  
    COUNT(DISTINCT website_pageview_id) as pageviews 
FROM website_pageviews 
WHERE created_at < '2012-06-09' 
GROUP BY 1 
ORDER BY pageviews DESC; 
 

#2. Doing entry page analysis in order to figure out where I should focus my energy on. 
I want to see which page of the website customers saw first (landing page) up till 6/9/12 and rank by volume.  

CREATE TEMPORARY TABLE first_pageview 
SELECT  
	website_session_id, 
	MIN(website_pageview_id) as MinPageViewID 
FROM website_pageviews 
WHERE website_pageview_id < 1000 
GROUP BY 1; 

SELECT  
	website_pageviews.pageview_url as landingPage, -- aka 'Entry page' 
	COUNT(DISTINCT first_pageview.website_session_id) as NumberofSessions 
FROM first_pageview 
LEFT JOIN website_pageviews 
	ON first_pageview.minPageViewID = website_pageviews.website_pageview_id 
GROUP BY 1; 

#3. Calculating bounce rates: I need to pull up bounce rates for traffic landing on the homepage and 
display results as Sessions, Bounce Sessions and % of sessions that bounced (rate).  

Create temporary table Home4  
SELECT 
	pageview_url, 
	website_session_id, 
    MIN(website_pageview_id) as min_pageview_id 
FROM website_pageviews 
WHERE pageview_url = '/home'  
AND created_at <'2012-06-14' 
GROUP BY 2; 

CREATE TEMPORARY TABLE bounced_sessions4       
SELECT 
	home4.website_session_id, 
	home4.pageview_url as landingPage, 
	COUNT(website_pageviews.website_pageview_id) AS count_of_pages_viewed 
FROM home4 
LEFT JOIN website_pageviews 
	ON website_pageviews.website_session_id = home4.website_session_id 
GROUP BY 1,2 
HAVING 
	COUNT(website_pageviews.website_pageview_id) = 1;  

SELECT 
    COUNT(home4.website_session_id) AS total_sessions, 
    COUNT(bounced_sessions4.website_session_id) AS total_bounceSessions, 
    COUNT(bounced_sessions4.website_session_id)/COUNT(home4.website_session_id) as BounceRate 
FROM home4 
    LEFT JOIN bounced_sessions4 
ON home4.website_session_id = bounced_sessions4.website_session_id; 

 

 

#3. Analyzing landing page tests. I need to pull bounce rates for BOTH groups (/lander-1 , /home)  

CREATE TEMPORARY TABLE Lander2 
SELECT 
	website_pageviews.pageview_url, 
	website_pageviews.website_session_id, 
	MIN(website_pageviews.website_pageview_id) as min_pageview_id 
FROM website_pageviews 
INNER JOIN website_sessions 
	ON website_pageviews.website_session_id = website_sessions.website_session_id 
WHERE website_pageviews.pageview_url = '/lander-1' 
AND website_pageviews.created_at < '2012-07-28' 
    AND website_sessions.utm_source = 'gsearch' 
    AND website_sessions.utm_campaign = 'nonbrand' 
GROUP BY 2; 

CREATE TEMPORARY TABLE LanderBounce2 
SELECT 
	lander2.website_session_id, 
	lander2.pageview_url as LandingPage, 
COUNT(website_pageviews.website_pageview_id) as Count_Pagesviewed 
FROM lander2 
LEFT JOIN website_pageviews 
	ON lander2.website_session_id = website_pageviews.website_session_id 
GROUP BY 1,2 
HAVING 
	COUNT(website_pageviews.website_pageview_id) =1; 

CREATE TEMPORARY TABLE Home2 
SELECT 
	website_pageviews.pageview_url, 
	website_pageviews.website_session_id, 
	MIN(website_pageviews.website_pageview_id) as min_pageview_id 
FROM website_pageviews 
LEFT JOIN website_sessions 
	ON website_pageviews.website_session_id = website_sessions.website_session_id 
WHERE website_pageviews.pageview_url = '/home' 
AND website_pageviews.created_at BETWEEN '2012-06-19' AND '2012-07-28' 
    AND website_sessions.utm_source = 'gsearch' 
    AND website_sessions.utm_campaign = 'nonbrand' 
GROUP BY 2; 

CREATE TEMPORARY TABLE HomeBounce2 

SELECT 
	home2.website_session_id, 
	home2.pageview_url as LandingPage, 
COUNT(website_pageviews.website_pageview_id) as Count_Pagesviewed 
FROM home2 
LEFT JOIN website_pageviews 
	ON home2.website_session_id = website_pageviews.website_session_id 
GROUP BY 1,2 
HAVING COUNT(website_pageviews.website_pageview_id) =1; 

SELECT  
	'/home' as LandingPage, 
	COUNT(DISTINCT Home2.website_session_id) AS total_sessions, 
	COUNT(DISTINCT HomeBounce2.website_session_id) AS total_BounceSessions, 
	COUNT(DISTINCT HomeBounce2.website_session_id)  / COUNT(Home2.website_session_id) as BounceRate 
FROM Home2 
LEFT JOIN HomeBounce2 
    ON Home2.website_session_id = HomeBounce2.website_session_id 
UNION 
SELECT  
	'/lander-1' as LandingPage, 
	COUNT(DISTINCT lander2.website_session_id) AS total_sessions, 
	COUNT(DISTINCT LanderBounce2.website_session_id) AS total_BounceSessions, 
	COUNT(DISTINCT LanderBounce2.website_session_id)  / COUNT(lander2.website_session_id) as BounceRate 
FROM Lander2 
LEFT JOIN LanderBounce2 
    ON lander2.website_session_id = LanderBounce2.website_session_id; 

 

#4. LANDING PAGE TREND ANALYSIS. We have a 2nd pageURL called /lander-1 to see if we can get the bounce rates lower compared to the /home landing page.  
We want to pull the volume of (utmsource: gsearch) (utmcampaign nonbrand) traffic on /home and /lander-1 pages, trended weekly from 6/1 - 8/31/2012 
ALSO need overall bounce rate trended weekly for this volume.  
COLUMNS NEEDED TO DISPLAY : week_start_date | bounce_rate | home_sessions | lander_sessions 

CREATE TEMPORARY TABLE home_lander_PageViews 
SELECT 
	website_pageviews.website_session_id, 
	MIN(website_pageviews.website_pageview_id) as min_pageview, 
	website_pageviews.pageview_url as landing_page 
FROM website_pageviews 
INNER JOIN website_sessions 
ON website_pageviews.website_session_id = website_sessions.website_session_id 
    AND website_sessions.created_at BETWEEN '2012-06-01' AND '2012-08-31' 
    AND website_sessions.utm_campaign = 'nonbrand' 
    AND website_sessions.utm_source = 'gsearch' 
WHERE 
	website_pageviews.pageview_url IN ('/home', '/lander-1') 
GROUP BY 1; 

CREATE TEMPORARY TABLE Bounce_sessions 
SELECT 
	home_lander_PageViews.website_session_id, 
	home_lander_PageViews.landing_page, 
	COUNT(website_pageviews.website_pageview_id) AS count_of_pagesViewed 
FROM home_lander_PageViews 
LEFT JOIN website_pageviews 
	ON home_lander_PageViews.website_session_id = website_pageviews.website_session_id 
GROUP BY 1,2 
HAVING COUNT(website_pageviews.website_pageview_id) =1; -- LIMITING TO BOUNCE SESSIONS' 

SELECT 
-- YEARWEEK(website_pageviews.created_at), 
MIN(DATE(website_pageviews.created_at)) AS week_start_date, 
COUNT( DISTINCT bounce_sessions.website_session_id)/COUNT(DISTINCT home_lander_pageviews.website_session_id) as bounce_Rate, 
COUNT( DISTINCT CASE WHEN home_lander_pageviews.landing_page = '/home' THEN home_lander_pageviews.website_session_id ELSE NULL END) as home_sessions, 
COUNT( DISTINCT CASE WHEN home_lander_pageviews.landing_page = '/lander-1' THEN home_lander_pageviews.website_session_id ELSE NULL END) as Lander_sessions 
-- COUNT( DISTINCT CASE WHEN Bounce_sessions.landing_page = '/home' THEN Bounce_sessions.website_session_id ELSE NULL END) as HomeBounces, 
-- COUNT( DISTINCT CASE WHEN Bounce_sessions.landing_page = '/lander-1' THEN Bounce_sessions.website_session_id ELSE NULL END) as LanderBounces 
FROM website_pageviews  
LEFT JOIN Bounce_sessions 
	ON bounce_sessions.website_session_id = website_pageviews.website_session_id 
LEFT JOIN home_lander_pageviews 
	ON home_lander_pageviews.website_session_id = website_pageviews.website_session_id 
WHERE website_pageviews.created_at BETWEEN '2012-06-01' AND '2012-08-31' 
GROUP BY YEARWEEK(website_pageviews.created_at); 
